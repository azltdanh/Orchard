@model RealEstate.ViewModels.PropertyTypeEditViewModel
<fieldset>
    @Html.LabelFor(m => m.GroupId, T("Group"))
    @Html.DropDownListFor(m => m.GroupId,
    Model.Groups.Select(s => new SelectListItem
    {
        Selected = s.Id == Model.GroupId,
        Text = s.Name,
        Value = s.Id.ToString()
    }))
    @Html.ValidationMessageFor(m => m.GroupId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.Name, T("Name"))
    @Html.TextBoxFor(m => m.Name, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.Name, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.ShortName, T("ShortName"))
    @Html.TextBoxFor(m => m.ShortName, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.ShortName, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.CssClass, T("CssClass"))
    @Html.TextBoxFor(m => m.CssClass, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.CssClass, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.SeqOrder, T("SeqOrder"))
    @Html.TextBoxFor(m => m.SeqOrder, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.SeqOrder, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.IsEnabled, T("IsEnabled"))
    @Html.EditorFor(m => m.IsEnabled)
    @Html.ValidationMessageFor(m=>m.IsEnabled, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.UnitPrice, T("UnitPrice"))
    @Html.EditorFor(m => m.UnitPrice)
    @Html.ValidationMessageFor(m => m.UnitPrice, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.DefaultImgUrl, T("DefaultImgUrl"))
    @Html.TextBoxFor(m => m.DefaultImgUrl, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.DefaultImgUrl, "*")
</fieldset>