@model RealEstate.ViewModels.PropertyTypeConstructionEditViewModel
<fieldset>
    @Html.LabelFor(m => m.PropertyGroupId, T("Nhóm BĐS:"))
    @Html.DropDownListFor(m => m.PropertyGroupId,
    Model.PropertyGroups.Select(s => new SelectListItem
    {
        Selected = s.Id == Model.PropertyGroupId,
        Text = s.Name,
        Value = s.Id.ToString()
    }))
    @Html.ValidationMessageFor(m => m.PropertyGroupId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.PropertyTypeId, T("Loại BĐS:"))
    @Html.DropDownListFor(m => m.PropertyTypeId,
    Model.PropertyTypes.Select(s => new SelectListItem
    {
        Selected = s.Id == Model.PropertyTypeId,
        Text = s.Name,
        Value = s.Id.ToString()
    }))
    @Html.ValidationMessageFor(m => m.PropertyTypeId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.MinFloor, T("Số tầng:"))
    @Html.EditorFor(m => m.MinFloor)
    đến
    @Html.EditorFor(m => m.MaxFloor) tầng
    <label>@Html.EditorFor(m => m.IsDefaultInFloorsRange) Default</label>
    @Html.ValidationMessageFor(m => m.MinFloor, "*")
    @Html.ValidationMessageFor(m => m.MaxFloor, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.Name, T("Loại công trình:"))
    @Html.TextAreaFor(m => m.Name, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.Name, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.UnitPrice, T("Suất vốn đầu tư:"))
    @Html.EditorFor(m => m.UnitPrice) đồng/m2
    @Html.ValidationMessageFor(m => m.UnitPrice, "*")
</fieldset>
@*<fieldset>
    @Html.LabelFor(m => m.ShortName, T("ShortName"))
    @Html.TextBoxFor(m => m.ShortName, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.ShortName, "*")
</fieldset>*@
<fieldset>
    @Html.LabelFor(m => m.SeqOrder, T("SeqOrder"))
    @Html.TextBoxFor(m => m.SeqOrder)
    @Html.ValidationMessageFor(m => m.SeqOrder, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.CssClass, T("CssClass"))
    @Html.TextBoxFor(m => m.CssClass)
    @Html.ValidationMessageFor(m => m.CssClass, "*")
</fieldset>
@*<fieldset>
    @Html.LabelFor(m => m.IsEnabled, T("IsEnabled"))
    @Html.EditorFor(m => m.IsEnabled)
    @Html.ValidationMessageFor(m=>m.IsEnabled, "*")
</fieldset>*@
@*<fieldset>
    @Html.LabelFor(m => m.DefaultImgUrl, T("DefaultImgUrl"))
    @Html.TextBoxFor(m => m.DefaultImgUrl, new { @class = "textMedium" })
    @Html.ValidationMessageFor(m => m.DefaultImgUrl, "*")
</fieldset>*@
<script type="text/javascript">
    $('#PropertyGroupId').change(function () {
        if ($(this).val() > 0) {
            $.ajax({
                type: "get",
                dataType: "",
                url: "/RealEstate.Admin/Home/GetPropertyTypeIdsForJson",
                data: {
                    typeGroupId: $(this).val()
                },
                success: function (response) {
                    $('#PropertyTypeId').empty().append("<option value=''>-- Vui lòng chọn --</option>");
                    $.each(response.list, function (i, item) { $('#PropertyTypeId').append("<option value=" + item.Value + ">" + item.Text + "</option>"); });
                    $('#PropertyTypeId').change();
                },
                error: function (request, status, error) {
                    $('#PropertyTypeId').empty().append("<option value=''>-- Vui lòng chọn --</option>");
                    console.log(error);
                }
            });
        }
    });
</script>