@model RealEstate.ViewModels.UserGroupCreateViewModel
@{
    Script.Require("BootstrapCombobox");
    Style.Require("Select2");
    Script.Require("Select2");
    Script.Require("Common");
}
<fieldset>
    @Html.LabelFor(m => m.Name, T("Name"))
    @Html.TextBoxFor(m => m.Name, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.Name, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.ShortName, T("ShortName"))
    @Html.TextBoxFor(m => m.ShortName, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.ShortName, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.SeqOrder, T("SeqOrder"))
    @Html.TextBoxFor(m => m.SeqOrder, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.SeqOrder, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.IsEnabled, T("IsEnabled"))
    @Html.EditorFor(m => m.IsEnabled)
    @Html.ValidationMessageFor(m => m.IsEnabled, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.GroupAdminUserId, T("GroupAdminUser:"))
    @Html.TextBoxFor(m => m.GroupAdminUserId, new { @class = "text-box-medium select2-user" })
    @Html.ValidationMessageFor(m => m.GroupAdminUserId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.ContactPhone, T("ContactPhone"))
    @Html.TextBoxFor(m => m.ContactPhone, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.ContactPhone, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.DefaultProvinceId, T("Tỉnh / Thành phố (mặc định):"))
    @Html.DropDownListFor(m => m.DefaultProvinceId, Model.Provinces, "-- Tỉnh / Thành phố --", new { Class = "combobox" })
    @Html.ValidationMessageFor(m => m.DefaultProvinceId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.DefaultDistrictId, T("Quận / Huyện (mặc định):"))
    @Html.DropDownListFor(m => m.DefaultDistrictId, Model.Districts, "-- Quận / Huyện --", new { Class = "combobox" })
    @Html.ValidationMessageFor(m => m.DefaultDistrictId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.DefaultPropertyStatusId, T("Trạng thái tin rao (mặc định):"))
    @Html.DropDownListFor(m => m.DefaultPropertyStatusId,
    Model.PropertyStatus.Select(s => new SelectListItem
    {
        Selected = s.Id == Model.DefaultPropertyStatusId,
        Text = s.Name,
        Value = s.Id.ToString()
    }), "Trạng thái tin rao (mặc định)", new { @class = "select-box" })
    @Html.ValidationMessageFor(m => m.DefaultPropertyStatusId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.DefaultAdsTypeId, T("Loại tin rao (mặc định):"))
    @Html.DropDownListFor(m => m.DefaultAdsTypeId,
    Model.AdsTypes.Select(s => new SelectListItem
    {
        Selected = s.Id == Model.DefaultAdsTypeId,
        Text = s.Name,
        Value = s.Id.ToString()
    }), "Loại tin rao (mặc định)", new { @class = "select-box" })
    @Html.ValidationMessageFor(m => m.DefaultAdsTypeId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.DefaultTypeGroupId, T("Nhóm BĐS (mặc định):"))
    @Html.DropDownListFor(m => m.DefaultTypeGroupId,
    Model.TypeGroups.Select(s => new SelectListItem
    {
        Selected = s.Id == Model.DefaultTypeGroupId,
        Text = s.Name,
        Value = s.Id.ToString()
    }), "Nhóm BĐS (mặc định)", new { @class = "select-box" })
    @Html.ValidationMessageFor(m => m.DefaultTypeGroupId, "*")
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.NumberOfAdsGoodDeal, T("Number Of AdsGoodDeal (-1 is unlimited)"))
    @Html.TextBoxFor(m => m.NumberOfAdsGoodDeal, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.NumberOfAdsGoodDeal, "*")
</fieldset>
@*<fieldset>
    @Html.LabelFor(m => m.NumberOfAdsVIP, T("Number Of AdsVIP (-1 is unlimited)"))
    @Html.TextBoxFor(m => m.NumberOfAdsVIP, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.NumberOfAdsVIP, "*")
</fieldset>*@
<fieldset>
    @Html.LabelFor(m => m.NumberOfAdsHighlight, T("Number Of AdsHighlight (-1 is unlimited)"))
    @Html.TextBoxFor(m => m.NumberOfAdsHighlight, new { @class = "text-box text-box-medium" })
    @Html.ValidationMessageFor(m => m.NumberOfAdsHighlight, "*")
</fieldset>

    @if (String.IsNullOrEmpty(Model.ReturnUrl))
    {
        @Html.ActionLink(T("Back").ToString(), "Index", new { }, new { @class = "button primaryAction", name = "submit.Back" })
    }
    else
    {
        <a href="@Model.ReturnUrl" class="button primaryAction" name="submit.Back">Back</a>
    }
    
    <script type="text/javascript">
        $(function () {
            $('[name="submit.SaveReturn"],[name="submit.Back"]').insertAfter('fieldset.save-button button[name="submit.Save"]').css('margin-left', '4px');
        });
    </script>
