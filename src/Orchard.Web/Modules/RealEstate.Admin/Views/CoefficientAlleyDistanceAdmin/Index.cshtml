@model RealEstate.ViewModels.CoefficientAlleyDistancesIndexViewModel
@using RealEstate.Models;
@using RealEstate.ViewModels;

@{
    Script.Require("Common");
    Layout.Title = T("Coefficient Alley Distance").ToString();
}

@using (Html.BeginFormAntiForgeryPost())
{ 
    @Html.ValidationSummary()
    <div class="manage">@Html.ActionLink(T("Add new CoefficientAlleyDistance").ToString(), "Create", new { }, new { @class = "button primaryAction" })</div>

    <fieldset class="bulk-actions">
        <label for="publishActions">@T("Actions:")</label>
        <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)">
            @Html.SelectOption(Model.Options.BulkAction, CoefficientAlleyDistancesBulkAction.None, T("Choose action...").ToString())
            @Html.SelectOption(Model.Options.BulkAction, CoefficientAlleyDistancesBulkAction.Enable, T("Enable").ToString())
            @Html.SelectOption(Model.Options.BulkAction, CoefficientAlleyDistancesBulkAction.Disable, T("Disable").ToString())
            @Html.SelectOption(Model.Options.BulkAction, CoefficientAlleyDistancesBulkAction.Delete, T("Delete").ToString())
        </select>
        <button type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
    </fieldset>
    <fieldset class="bulk-actions">
        @Html.TextBoxFor(m => m.Options.Search, new { @class = "text" })        
        <label for="filterResults">@T("Filter:")</label>
        <select id="filterResults" name="@Html.NameOf(m => m.Options.Filter)">
            @Html.SelectOption(Model.Options.Filter, CoefficientAlleyDistancesFilter.All, T("All").ToString())
        </select>
        <label for="filterResults">@T("Sort by:")</label>
        <select id="filterResults1" name="@Html.NameOf(m => m.Options.Order)">
            @Html.SelectOption(Model.Options.Order, CoefficientAlleyDistancesOrder.Name, T("Name").ToString())
            @Html.SelectOption(Model.Options.Order, CoefficientAlleyDistancesOrder.SeqOrder, T("SeqOrder").ToString())
        </select>

        <button type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
    </fieldset>
    <fieldset>
        <table class="items">
            <thead>
                <tr>
                    <th scope="col"><input class="selectAll" type="checkbox" value="@Html.NameOf(m => m.CoefficientAlleyDistances)" /></th>
                    <th scope="col">@T("LastAlleyWidth")</th>
                    <th scope="col">@T("MaxAlleyDistance")</th>
                    <th scope="col">@T("CoefficientDistance")</th>
                    <th scope="col">@T("Actions")</th>
                </tr>
            </thead>
            @{var index = 0;}
            @foreach (var entry in Model.CoefficientAlleyDistances)
            { 
            <tr>
                <td>
                    <input type="hidden" value="@Model.CoefficientAlleyDistances[index].CoefficientAlleyDistance.Id" name="@Html.NameOf(m => m.CoefficientAlleyDistances[index].CoefficientAlleyDistance.Id)"/>
                    <input type="checkbox" value="true" name="@Html.NameOf(m => m.CoefficientAlleyDistances[index].IsChecked)"/>
                </td>
                <td>
                    @Html.DisplayFor(model => entry.CoefficientAlleyDistance.LastAlleyWidth, "m")
                </td>
                <td>
                    @Html.DisplayFor(model => entry.CoefficientAlleyDistance.MaxAlleyDistance, "m")
                </td>
                <td>
                    @Html.DisplayFor(model => entry.CoefficientAlleyDistance.CoefficientDistance, "Double")
                </td>
                <td>
                    @Html.ActionLink(T("Edit").ToString(), "Edit", new { entry.CoefficientAlleyDistance.Id }) |
                    @Html.ActionLink(T("Delete").ToString(), "Delete", new { entry.CoefficientAlleyDistance.Id }, new { itemprop = "RemoveUrl UnsafeUrl" })
                </td>
            </tr>
                index++;
            }
        </table>

    @Display(Model.Pager)

    </fieldset>
} 