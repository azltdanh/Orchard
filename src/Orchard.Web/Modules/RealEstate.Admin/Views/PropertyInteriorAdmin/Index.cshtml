@model RealEstate.ViewModels.PropertyInteriorsIndexViewModel
@using RealEstate.Models;
@using RealEstate.ViewModels;

@{
    Script.Require("Common");
    Layout.Title = T("Property Interiors").ToString();
}

@using (Html.BeginFormAntiForgeryPost())
{ 
    @Html.ValidationSummary()
    <div class="manage">@Html.ActionLink(T("Add new Property Interior").ToString(), "Create", new { }, new { @class = "button primaryAction" })</div>

    <fieldset class="bulk-actions">
        <label for="publishActions">@T("Actions:")</label>
        <select id="publishActions" name="@Html.NameOf(m => m.Options.BulkAction)">
            @Html.SelectOption(Model.Options.BulkAction, PropertyInteriorsBulkAction.None, T("Choose action...").ToString())
            @Html.SelectOption(Model.Options.BulkAction, PropertyInteriorsBulkAction.Enable, T("Enable").ToString())
            @Html.SelectOption(Model.Options.BulkAction, PropertyInteriorsBulkAction.Disable, T("Disable").ToString())
            @Html.SelectOption(Model.Options.BulkAction, PropertyInteriorsBulkAction.Delete, T("Delete").ToString())
        </select>
        <button type="submit" name="submit.BulkEdit" value="@T("Apply")">@T("Apply")</button>
    </fieldset>
    <fieldset class="bulk-actions">
        @Html.TextBoxFor(m => m.Options.Search, new { @class = "text" })        
        <label for="filterResults">@T("Filter:")</label>
        <select id="filterResults" name="@Html.NameOf(m => m.Options.Filter)">
            @Html.SelectOption(Model.Options.Filter, PropertyInteriorsFilter.All, T("All").ToString())
        </select>
        <label for="filterResults">@T("Sort by:")</label>
        <select id="filterResults1" name="@Html.NameOf(m => m.Options.Order)">
            @Html.SelectOption(Model.Options.Order, PropertyInteriorsOrder.Name, T("Name").ToString())
            @Html.SelectOption(Model.Options.Order, PropertyInteriorsOrder.SeqOrder, T("SeqOrder").ToString())
        </select>

        <button type="submit" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>
    </fieldset>
    <fieldset>
        <table class="items">
            <thead>
                <tr>
                    <th scope="col"><input class="selectAll" type="checkbox" value="@Html.NameOf(m => m.PropertyInteriors)" /></th>
                    <th scope="col">@T("Name")</th>
                    <th scope="col">@T("ShortName")</th>
                    <th scope="col">@T("UnitPrice")</th>
                    <th scope="col">@T("CssClass")</th>
                    <th scope="col">@T("SeqOrder")</th>
                    <th scope="col">@T("IsEnabled")</th>
                    <th scope="col">@T("Actions")</th>
                </tr>
            </thead>
            @{var index = 0;}
            @foreach (var entry in Model.PropertyInteriors)
            { 
            <tr>
                <td>
                    <input type="hidden" value="@Model.PropertyInteriors[index].PropertyInterior.Id" name="@Html.NameOf(m => m.PropertyInteriors[index].PropertyInterior.Id)"/>
                    <input type="checkbox" value="true" name="@Html.NameOf(m => m.PropertyInteriors[index].IsChecked)"/>
                </td>
                <td>
                    @Html.ActionLink(entry.PropertyInterior.Name, "Edit", new { entry.PropertyInterior.Id }) 
                </td>
                <td>
                    @entry.PropertyInterior.ShortName 
                </td>
                <td>
                    @Html.DisplayFor(model => entry.PropertyInterior.UnitPrice, "Double") VND
                </td>
                <td>
                    @entry.PropertyInterior.CssClass 
                </td>
                <td>
                    @entry.PropertyInterior.SeqOrder 
                </td>
                <td>
                    @entry.PropertyInterior.IsEnabled 
                </td>
                <td>
                    @Html.ActionLink(T("Edit").ToString(), "Edit", new { entry.PropertyInterior.Id }) |
                    @Html.ActionLink(T("Delete").ToString(), "Delete", new { entry.PropertyInterior.Id }, new { itemprop = "RemoveUrl UnsafeUrl" })
                </td>
            </tr>
                index++;
            }
        </table>

    @Display(Model.Pager)

    </fieldset>
} 